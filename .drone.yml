matrix:
  GO_VERSION:
    - 1.5
    - 1.6
  GOOS:
    - linux
    - darwin
    - windows
  GOARCH:
    - "386"
    - amd64

compose:
  mqtt:
    image: ansi/mosquitto

build:
  test:
    image: golang:$$GO_VERSION
    commands:
      - go get -t -d ./...
      - go list ./... | grep -vE 'integration|ttn$' | xargs go test
      - sh -c 'FMTRES="$(go fmt ./...)"; if [ ! -z "$FMTRES" ]; then echo $FMTRES; exit 255; fi'
      - go vet ./...
    when:
      matrix:
        GOOS: linux
        GOARCH: amd64
  release:
    image: htdvisser/ttnbuild
    commands:
      # ttnbuild already contains dependencies, so we copy them:
      - rsync -a /go/src/ /drone/src/
      # and get the ones that we missed in ttnbuild
      - GOOS=$$GOOS GOARCH=$$GOARCH go get -d -v ./...
      - ./build_binaries.sh $$GOOS $$GOARCH
    when:
      branch: [master, develop]
      matrix:
        GO_VERSION: 1.6

publish:
  azure_storage:
    image: htdvisser/drone-azure-storage
    account_key: $$AZURE_STORAGE_KEY
    storage_account: ttnreleases
    container: release
    source: release/
    when:
      branch: [master, develop]
      matrix:
        GO_VERSION: 1.6
  dockerhub:
    repo: thethingsnetwork/ttn
    token: $$DOCKER_TOKEN
    when:
      branch: [master, develop]
      matrix:
        GO_VERSION: 1.6
        GOOS: linux
        GOARCH: amd64
